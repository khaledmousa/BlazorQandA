@page "/Question/{QuestionId}"

@using QA.Web.Client.ViewModels
@using QA.Domain.Entities
@using System.Linq

@inject HttpClient Http;
@inject NavigationManager Navigation;

@if (ViewModel == null || ViewModel.Question == null)
{
    <b>Loading, please wait...</b>
}
else
{
    <div class="card bg-light">
        <div class="card-header">
            @ViewModel.Question.Title
        </div>
        <div class="card-body">
            <h6>
                @foreach (var tag in ViewModel.Question.Tags)
                {
                    <span class="badge badge-primary">@tag.Name</span>
                }
            </h6>
            <h5>
                <button @onclick="ViewModel.VoteUp" class="btn"><i class="oi oi-plus"></i></button>
                @ViewModel.Question.Votes.Sum(v => v.Direction == Direction.Down ? -1 : 1)
                <button @onclick="ViewModel.VoteDown" class="btn"><i class="oi oi-minus"></i></button>
            </h5>
            <p class="card-text"><Markdown Value="@ViewModel.Question.Text" /></p>
            <button type="button" class="btn btn-link" data-toggle="collapse" data-target="#questionComments">Comments (@ViewModel.Question?.Comments?.Count())</button>
            <div id="questionComments" class="collapse">
                <ul class="list-group list-group-flush">
                    @foreach (var c in ViewModel.Question.Comments)
                    {
                        <li class="list-group-item small">@c.Text</li>
                    }
                </ul>
                <textarea @bind="ViewModel.Question.NewCommentText"></textarea>
                <button type="button" class="btn btn-light" @onclick="ViewModel.Question.AddComment">Comment</button>
            </div>
        </div>
    </div>
    <AuthorizeView>
        <Authorized>
            <a href="/Question/@ViewModel?.Question?.Id/Answer" class="btn btn-primary float-right">Post Answer</a>
        </Authorized>
    </AuthorizeView>    
    <h2>Answers</h2>
    <ul class="list-group">
        @foreach (var a in ViewModel.Question.Answers ?? new List<AnswerViewModel>())
        {
            <li class="list-group-item">
                <div class="card">
                    <div class="card-body">
                        <h5>
                            <button @onclick="a.VoteUp" class="btn"><i class="oi oi-plus"></i></button>
                            @a.Votes.Sum(v => v.Direction == Direction.Down ? -1 : 1)
                            <button @onclick="a.VoteDown" class="btn"><i class="oi oi-minus"></i></button>
                            <button @onclick="@a.AcceptAnswer" class="btn"><i class="oi oi-check" style="color:@(a.IsAccepted ? "green" : "gray")"></i></button>
                        </h5>
                        <p class="card-text"><Markdown Value="@a.Text" /></p>
                    </div>
                    <button type="button" class="btn btn-link" data-toggle="collapse" data-target="#@(AnswerCounter)comments">Comments (@a.Comments?.Count())</button>
                    <div id="@(AnswerCounter++)comments" class="collapse">
                        <ul class="list-group list-group-flush">
                            @foreach (var c in a.Comments)
                            {
                                <li class="list-group-item small">@c.Text</li>
                            }
                        </ul>
                    </div>
                </div>
            </li>
        }
    </ul>
}

@code{

    [Parameter]
    public string QuestionId { get; set; }

    private int AnswerCounter { get; set; }

    PostViewModel ViewModel;

    protected override async Task OnInitializedAsync()
    {
        ViewModel = new PostViewModel(Http, Navigation);
        await ViewModel.LoadQuestionAsync(QuestionId);
    }
}
