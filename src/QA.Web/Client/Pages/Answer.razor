@page "/Question/{QuestionId}/Answer"

@using QA.Web.Client.ViewModels
@using QA.Domain.Entities
@using System.Linq
@using Markdig


@inject HttpClient Http;
@inject NavigationManager Navigation;


@if (ViewModel?.Question != null)
{
    <AuthorizeView>
        <Authorized>
            <div class="card bg-light">
                <div class="card-header">
                    @ViewModel.Question.Title
                </div>
                <div class="card-body">
                    <h6>
                        @foreach (var tag in ViewModel.Question.Tags)
                        {
                            <span class="badge badge-primary">@tag.Name</span>
                        }
                    </h6>
                    <p class="card-text">@ViewModel.Question.Text</p>
                </div>
            </div>

            <h3>Post Answer</h3>

            <MardownEditor OnTextChanged="@ViewModel.SetAnswer" />
            <button class="btn btn-primary float-right" @onclick="ViewModel.AddAnswer">Post</button>
        </Authorized>
        <NotAuthorized>
            <b>You need to log in before posting an answer</b>
        </NotAuthorized>
    </AuthorizeView>
}

@code{

    [Parameter]
    public string QuestionId { get; set; }
    public NewAnswerViewModel ViewModel;

    protected override async Task OnInitializedAsync()
    {
        ViewModel = new NewAnswerViewModel(Http, Navigation, QuestionId, () => StateHasChanged());
        await ViewModel.InitializeAsync();
    }
}