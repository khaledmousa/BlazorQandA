@page "/Question/{QuestionId}"

@using QA.Web.Client.ViewModels
@using QA.Domain.Entities
@using System.Linq

@inject HttpClient Http;
@inject NavigationManager Navigation;

@if (ViewModel == null || ViewModel.Question == null)
{
    <b>Loading, please wait...</b>
}
else
{
    <div class="card bg-light">
        <div class="card-header">
            @ViewModel.Question.Title
        </div>
        <div class="card-body">
            <h6 class="card-subtitle mb-2 text-muted">@string.Join(", ", ViewModel.Question.Tags.Select(t => t.Name))</h6>
            <h5>
                <button @onclick="ViewModel.VoteUp" class="btn"><i class="oi oi-plus"></i></button>
                @ViewModel.Question.Votes.Sum(v => v.Direction == Direction.Down ? -1 : 1)
                <button @onclick="ViewModel.VoteDown" class="btn"><i class="oi oi-minus"></i></button>
            </h5>
            <p class="card-text"><Markdown Value="@ViewModel.Question.Text" /></p>
        </div>
        <ul class="list-group list-group-flush">
            @foreach (var c in ViewModel.Question.Comments)
            {
                <li class="list-group-item small">@c.Text</li>
            }
        </ul>
    </div>
    <a href="/Question/@ViewModel?.Question?.Id/Answer" class="btn btn-primary float-right">Post Answer</a>
    <h2>Answers</h2>
    <ul class="list-group">
        @foreach (var a in ViewModel.Question.Answers ?? new List<AnswerViewModel>())
        {
            <li class="list-group-item">
                <div class="card">
                    <div class="card-body">
                        <h5>
                            <button @onclick="a.VoteUp" class="btn"><i class="oi oi-plus"></i></button>
                            @a.Votes.Sum(v => v.Direction == Direction.Down ? -1 : 1)
                            <button @onclick="a.VoteDown" class="btn"><i class="oi oi-minus"></i></button>
                        </h5>
                        <p class="card-text"><Markdown Value="@a.Text" /></p>
                    </div>
                    <ul class="list-group list-group-flush">
                        @foreach (var c in a.Comments)
                        {
                            <li class="list-group-item small">@c.Text</li>
                        }
                    </ul>
                </div>
            </li>
        }
    </ul>
}

@code{

    [Parameter]
    public string QuestionId { get; set; }

    PostViewModel ViewModel;

    protected override async Task OnInitializedAsync()
    {
        ViewModel = new PostViewModel(Http, Navigation);
        await ViewModel.LoadQuestionAsync(QuestionId);
    }
}